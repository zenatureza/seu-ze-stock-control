version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3.8-management
    networks:
      - app-network
    ports:
      - 5672:5672
      - 15672:15672

  stock-service:
    image: deliverymuch/backend-challenge:stock-service
    networks:
      - app-network
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
    restart: on-failure

  stock-control-api:
    build: ./
    entrypoint: ./.docker/entrypoint.sh
    container_name: stock-control-api
    environment:
      - CHOKIDAR_USEPOLLING=true
      - API_PORT=$API_PORT
      - MONGODB_HOST=$MONGODB_HOST
      - MONGODB_PORT=$MONGODB_PORT
      - MONGODB_DATABASE=$MONGODB_DATABASE
      - MONGODB_USERNAME=$MONGODB_USERNAME
      - MONGODB_PASSWORD=$MONGODB_PASSWORD
    ports:
      - 80:3000
    volumes:
      - ./:/home/app
    networks:
      - app-network
      - cache-network
      - db-network
    depends_on:
      - mongodb
      - rabbitmq
      - redis
    links:
      - mongodb
    # command: ./wait-for.sh mongo-db:27017 -- ./entrypoint.sh

  # got from: stackoverflow.com/a/33397913/174843
  mongo-seed:
    build: ./mongo-seed
    links:
      - mongodb
    networks:
      - db-network
    depends_on:
      - mongodb
    environment:
      - MONGODB_HOST=$MONGODB_HOST
      - MONGODB_PORT=$MONGODB_PORT
      - MONGODB_DATABASE=$MONGODB_DATABASE
      - MONGODB_USERNAME=$MONGODB_USERNAME
      - MONGODB_PASSWORD=$MONGODB_PASSWORD

  mongodb:
    container_name: mongodb
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGODB_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGODB_PASSWORD
    ports:
      - 27017:27017
    volumes:
      - ./database/:/data/db
    networks:
      - db-network

  redis:
    image: redis:alpine
    expose:
      - 6379
    networks:
      - cache-network

networks:
  app-network:
    driver: bridge
  cache-network:
    driver: bridge
  db-network:
    driver: bridge
