version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3.8-management
    networks:
      - app-network
    ports:
      - 5672:5672
      - 15672:15672

  stock-service:
    image: deliverymuch/backend-challenge:stock-service
    networks:
      - app-network
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
    restart: on-failure

  stock-control-api:
    build: ./
    entrypoint: ./.docker/entrypoint.sh
    container_name: stock-control-api
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - 3000:3000
    volumes:
      - ./:/home/node/express
    networks:
      - app-network
      - cache-network
      # - db-network
    depends_on:
      - rabbitmq
      - redis

    links:
      - database
      # - mongodb
    # command: ./wait-for.sh mongo-db:27017 -- ./entrypoint.sh

  database:
    image: mongo
  # mongodb:
  #   container_name: mongodb
  #   image: mongo
  #   # environment:
  #   #   MONGO_INITDB_ROOT_USERNAME: arthur
  #   #   MONGO_INITDB_ROOT_PASSWORD: arthur
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - ./database/:/data/db
  #   networks:
  #     - app-network
  #     # - db-network

  redis:
    image: redis:alpine
    expose:
      - 6379
    networks:
      - cache-network

networks:
  app-network:
    driver: bridge
  cache-network:
    driver: bridge
  # db-network:
  #   driver: bridge
